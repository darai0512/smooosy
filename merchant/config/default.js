module.exports = {
  port: 3000,
  mongodb: {
    uri: `mongodb://localhost:27017/${process.env.MONGO_DB_NAME}`,
    options: {
      socketTimeoutMS: 0,
      connectTimeoutMS: 0,
      useNewUrlParser: true,
      useCreateIndex: true,
      useFindAndModify: false,
    },
  },
  bucket: 'smooosy-dev',
  bucketOrigin: 'https://dev.smooosy.com/img',
  s3Origin: 'https://smooosy-dev.s3-ap-northeast-1.amazonaws.com',
  scrapingOrigin: 'http://localhost:3300',
  mailCheckOrigin: '',
  staticPath: 'dist/public',
  essentialPath: '',
  loadableWebStatsDir: 'dist/public/',
  loadableNodeStatsDir: 'dist/node/',
  encryptSeed: process.env.ENCRYPT_SEED || '',
  log4js: {
    pm2: true,
    pm2InstanceVar: 'INSTANCE_ID',
    disableClustering: true,
    appenders: {
      console: {
        type: 'console',
      },
    },
    categories: {
      default: {
        appenders: ['console'],
        level: 'debug',
      },
    },
  },
  aws: {
    accessKeyId: process.env.AWS_ACCESS_KEY,
    secretAccessKey: process.env.AWS_SECRET_KEY,
    DistributionId: '',
  },
  google: {
    analytics: '',
    apiKey: process.env.GOOGLE_API_KEY,
    oauthClient: process.env.GOOGLE_OAUTH_CLIENT,
    oauthSecret: process.env.GOOGLE_OAUTH_SECRET,
    spreadsheetId: '',
    spreadsheetLeadId: '',
    spreadsheetScrapingId: '',
    spreadsheetServiceSchema: [
      {key: '_id', text: '_id'},
      {key: 'key', text: 'サービスID（URL）'},
      {key: 'name', text: 'サービス名'},
      {key: 'providerName', text: 'プロの呼称'},
      {key: 'pageTitle', text: 'サービスページタイトル'},
      {key: 'pageMetaDescription', text: 'サービスページmeta description'},
      {key: 'priceComment', text: 'プライスコメント'},
      {key: 'priority', text: '優先度'},
      {key: 'basePoint', text: 'ポイント'},
      {key: 'enabled', text: '公開する'},
      {key: 'interview', text: '聞き取り'},
      {key: 'needMoreInfo', text: 'Need More Info'},
      {key: 'tags', text: 'タグ'},
      {key: 'distance', text: '距離(m)'},
    ],
    spreadsheetCategorySchema: [
      {key: '_id', text: '_id'},
      {key: 'key', text: 'カテゴリID（URL）'},
      {key: 'name', text: 'カテゴリ名'},
      {key: 'parent', text: 'セクション'},
      {key: 'pageTitle', text: 'カテゴリページタイトル'},
      {key: 'pageMetaDescription', text: 'カテゴリページmeta description'},
    ],
    descriptionServiceSchema: [
      {key: 'key', text: 'サービスID（URL）'},
      {key: 'name', text: 'サービス名'},
      {key: 'common', text: '共通'},
    ],
    pageDescriptionServiceSchema: [
      {key: 'key', text: 'サービスID（URL）'},
      {key: 'name', text: 'サービス名'},
      {key: 'template', text: 'テンプレ'},
      {key: 'common', text: '共通'},
    ],
    descriptionCategorySchema: [
      {key: 'key', text: 'カテゴリID（URL）'},
      {key: 'name', text: 'カテゴリ名'},
      {key: 'common', text: '共通'},
    ],
    pageDescriptionCategorySchema: [
      {key: 'key', text: 'カテゴリID（URL）'},
      {key: 'name', text: 'カテゴリ名'},
      {key: 'template', text: 'テンプレ'},
      {key: 'common', text: '共通'},
    ],
  },
  linebot: {
    bearer: process.env.LINE_BEARER || '',
    clientSecret: process.env.LINE_LOGIN_SECRET || '',
  },
  payment: {
    secret: process.env.PAYJP_SECRET,
    epsilon: {
      apiBase: 'https://beta.epsilon.jp/cgi-bin/order',
      st_codes: {
        'conveni': '00100-0000-00000',
        'jnb':     '00010-0000-00000',
        'rakuten': '00001-0000-00000',
        'payeasy': '00000-0100-00000',
      },
      paymentTypes: {
        '1': 'クレジットカード決済',
        '2': 'クレジットカード決済',
        '3': 'コンビニ決済',
        '4': 'ジャパンネット銀行決済',
        '5': '楽天銀行決済',
        '7': 'ペイジー決済',
      },
    },
  },
  statsd: {
    port: 8125,
    prefix: 'smooosy.',
    globalTags: {
      env: process.env.NODE_ENV,
      app: 'smooosy',
    },
  },
  datadog: {
    api_key: process.env.DATADOG_API_KEY || '',
    app_key: process.env.DATADOG_APP_KEY || '',
  },
  rollbar: {
    server_token: process.env.ROLLBAR_SERVER_TOKEN || '',
  },
  pickup: [
    '58ccc7a7e94aa8b63054ffad',
  ],
  bigquery: {
    projectId: 'x-micron-158015',
    dataset: 'smooosy',
    table_web: 'web_dev',
    table_searchconsole: 'searchconsole',
    table_searchconsole_detail: 'searchconsole_detail',
    table_searchconsole_summary: 'searchconsole_summary',
    table_maillog: 'maillog_dev',
    table_questionnaire: 'questionnaire_dev',
    table_match_more: 'match_more_dev',
    credentials: {
      client_email: '',
      private_key: process.env.BIGQUERY_PRIVATE_KEY || '',
    },
  },
  redis: {
    host: '127.0.0.1',
    port: 6379,
    storePrefix: {
      socketId: 'socket_id-',
      globalIP: 'ip-',
    },
  },
  websocket: {
    port: 8000,
  },
  sendgrid: {
    apiKey: process.env.SENDGRID_KEY || '',
    templateIdToSendGridUuid: {
    },
  },
  searchConsole: {
    REDIRECT_URL: 'https://smooosy.com/',
    CLIENT_ID: '',
    CLIENT_SECRET: process.env.SEARCHCONSOLE_CLIENT_SECRET || '',
    SITE_URL: 'https://smooosy.com/',
    REFRESH_TOKEN: process.env.SEARCHCONSOLE_REFRESH_TOKEN || '',
  },
  campaigns: {
    line: {
      title: 'LINEで通知',
      body: 'LINE通知を設定して外出先でも依頼を受け取りましょう。',
      link: '/account/info',
      point: 2,
      duration: 12,
      priority: 1,
      clearMessage: 'LINE連携が完了しました！',
    },
    reviews: {
      title: 'クチコミ',
      body: '',
      link: '/account/reviews',
      point: 2,
      duration: 12,
      priority: 1,
      clearMessage: 'クチコミを獲得しました！',
    },
    avatar: {
      title: '',
      body: '',
      link: '/account/info',
      point: 1,
      duration: 12,
      priority: 1,
      clearMessage: 'アイコン設定が完了しました！',
    },
    description: {
      title: 'プロフィール文',
      body: 'プロフィールの自己紹介・実績・アピール欄を合計で300文字以上入力しましょう。',
      link: '/account/profiles#about',
      point: 5,
      duration: 12,
      priority: 1,
      clearMessage: 'プロフィール文設定が完了しました！',
    },
    photo: {
      title: 'プロフィール写真',
      body: 'あなたの仕事の成果や様子がわかる写真を設定しましょう。',
      level: [
        '共通の写真を1枚設定',
        '共通の写真を4枚設定',
        '共通の写真を8枚設定',
        '共通の写真を16枚設定',
      ],
      link: '/account/profiles#media',
      point: 1,
      duration: 12,
      priority: 1,
      clearMessage: '写真設定が完了しました！',
    },
    meet: {
      title: 'はじめての応募',
      body: '',
      link: '/pros/requests',
      point: 3,
      duration: 12,
      priority: 1,
      clearMessage: '初めての応募が完了しました！',
    },
    tenMeets: {
      title: 'はじめての成約',
      body: 'システム上成約になっていない依頼がある場合は交渉中一覧から成約ボタンを押しましょう',
      link: '/pros/taking',
      point: 5,
      duration: 12,
      priority: 0,
      clearMessage: '初めて成約しました！',
    },
    twentyMeets: {
      title: '2回目の成約',
      body: '2回目の成約で5pt獲得できます。システム上成約になっていない依頼がある場合は交渉中一覧から成約ボタンを押しましょう',
      link: '/pros/taking',
      point: 5,
      duration: 12,
      priority: 0,
      clearMessage: '成約しました！',
    },
    inboundLink: {
      title: '自分のホームページにプロバッジを設置',
      body: '依頼が取りやすくなります。',
      link: '/p#badge',
      point: 5,
      duration: 12,
      priority: 0,
      clearMessage: '確認が完了しました！',
    },
    identification: {
      title: '本人確認',
      body: '個人または法人の確認書類をアップロードしましょう。プロフィールに本人確認バッジが表示されます。',
      link: '/account/profiles',
      point: 1,
      duration: 12,
      priority: 1,
      clearMessage: '本人確認が完了しました！',
    },
    referral: {
      title: '知り合い紹介',
      body: 'あなたの紹介で知り合いがプロ登録し依頼に応募したら、1人につき8pt獲得できます（5回まで）。違う業界でも大丈夫です。',
      level: [
        '知り合いを1人紹介',
        '知り合いを2人紹介',
        '知り合いを3人紹介',
        '知り合いを4人紹介',
        '知り合いを5人紹介',
      ],
      link: '/account/referrals',
      point: 8,
      duration: 12,
      priority: 0,
      clearMessage: '',
    },
    proServiceDescription: {
      title: 'サービス別自己紹介の設定',
      body: 'サービス別自己紹介を設定しましょう。サービスごとに1pt獲得できます。（10サービスまで）',
      link: '/account/services',
      point: 1,
      duration: 12,
      priority: 1,
      clearMessage: 'サービス別自己紹介の設定が完了しました！',
    },
  },
  mecabDicDir: '/usr/local/lib/mecab/dic',
  intercom: {
    secretKey: process.env.INTERCOM_SECRETKEY || '',
    accessToken: process.env.INTERCOM_TOKEN || '',
  },
  twilio: {
    accountSid: '',
    authToken: process.env.TWILIO_AUTH_TOKEN || '',
    twimlAppSid: '',
    callerId: '',
    smsId: '',
    workflows: {
      default: '',
      hold: '',
    },
    activities: {
    },
    workspaces: {
    },
  },
  elasticsearch: {
    host: 'http://localhost:9200',
    bulkInsertMax: 500,
  },
  wordpress: {
    username: process.env.WP_USER,
    password: process.env.WP_PASSWORD,
  },
  newsWP: {
    origin: 'https://public-api.wordpress.com',
    siteId: 162710580,
    clientId: process.env.NEWS_WP_CLIENT_ID || '',
    clientSecret: process.env.NEWS_WP_CLIENT_SECRET || '',
    username: process.env.NEWS_WP_USER || '',
    password: process.env.NEWS_WP_PASSWORD || '',
  },
  sitemap: {
    path: '/tmp',
  },
  showLocationLPs: [
    'photographers',
    'car-maintenance',
  ],
  location: {
    candidateLocationDistance: 300000, // 300km
    targetLocationDistance: 50000, // 50km
  },
}
